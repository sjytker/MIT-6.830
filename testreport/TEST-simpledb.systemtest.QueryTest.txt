Testsuite: simpledb.systemtest.QueryTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.846 sec
------------- Standard Output ---------------
Started a new transaction tid = 1
Added scan of table emp
Added scan of table dept
Added scan of table hobbies
Added scan of table hobby
Added join between emp.c1 and dept.c0
Added join between hobbies.c0 and emp.c2
Added join between hobbies.c1 and hobby.c0
Added select list field null.*
Transaction 1 aborted because of unhandled error
------------- ---------------- ---------------
------------- Standard Error -----------------
simpledb.DbException
	at simpledb.Parser.processNextStatement(Parser.java:558)
	at simpledb.Parser.processNextStatement(Parser.java:497)
	at simpledb.systemtest.QueryTest.queryTest(QueryTest.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.call(FailOnTimeout.java:32)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
------------- ---------------- ---------------

Testcase: queryTest took 0.724 sec
